FROM ubuntu
LABEL maintainer="JGJones"

# References:
# https://www.darkoperator.com/installing-metasploit-in-ubunt/
# https://www.pentestgeek.com/tools/install-metasploit-framework-ubuntu

# Set working directory

WORKDIR /opt
RUN mkdir oracle

# Copy files

COPY tmux.conf /root/.tmux.conf
COPY instantclient-basic-linux.x64-12.2.0.1.0.zip /opt/oracle
COPY instantclient-sqlplus-linux.x64-12.2.0.1.0.zip /opt/oracle
COPY instantclient-sdk-linux.x64-12.2.0.1.0.zip /opt/oracle
COPY db.sql /tmp

# Set environment variales

ENV PATH=$PATH:/usr/local/rvm/bin:/opt/oracle/instantclient_12_2
ENV SQLPATH=/opt/oracle/instantclient_12_2
ENV TNS_ADMIN=/opt/oracle/instantclient_12_2
ENV LD_LIBRARY_PATH=/opt/oracle/instantclient_12_2
ENV ORACLE_HOME=/opt/oracle/instantclient_12_2

ARG DEBIAN_FRONTEND=noninteractive
RUN apt-get update && \
	apt-get -y dist-upgrade &&\
	apt-get install -y \
	postgresql \
	postgresql-client \
	postgresql-contrib \
	nmap tmux \
	git \
	build-essential \
	curl \
	wget \
	libaio1 \
	libyaml-0-2 \
	libreadline-dev \
	libssl-dev \
	libpq5 \
	libpq-dev \
	libreadline5 \
	libsqlite3-dev \
	libpcap-dev \
	autoconf \
	pgadmin3 \
	zlib1g-dev \
	libxml2-dev \
	libxslt1-dev \
	libyaml-dev \
	zlib1g-dev \
	gawk \
	bison \
	libffi-dev \
	libgdbm-dev \
	libncurses5-dev \
	libtool \
	sqlite3 \
	libgmp-dev \
	gnupg2 \
	dirmngr \
	ntpdate \
	gnupg2 \
	zip \
	unzip \
	p7zip-full \
	libgmp-dev && \
	rm -rf /var/lib/apt/lists/* &&\
##########
# Oracle #
##########
	cd /opt/oracle &&\
	unzip instantclient-basic-linux.x64-12.2.0.1.0.zip &&\
	unzip instantclient-sqlplus-linux.x64-12.2.0.1.0.zip &&\
	unzip instantclient-sdk-linux.x64-12.2.0.1.0.zip &&\
	rm -f *.zip &&\
	cd instantclient_12_2 && ln libclntsh.so.12.1 libclntsh.so &&\
##############
# Metasploit #
##############
	cd /opt &&\
	git clone https://github.com/rapid7/metasploit-framework.git msf &&\
	cd msf &&\
## Set up Postgresql
	service postgresql start && su postgres -c "psql -f /tmp/db.sql" &&\
## Get RVM
	curl -sSL https://rvm.io/mpapis.asc | gpg2 --import &&\
	curl -sSL https://rvm.io/mpapis.asc | gpg2 --import - &&\
	curl -sSL https://rvm.io/pkuczynski.asc | gpg2 --import - &&\
	curl -L https://get.rvm.io | bash -s stable  &&\
	#source /etc/profile.d/rvm.sh &&\
#RUN	source ~/.rvm/scripts/rvm &&\
#	echo "source ~/.rvm/scripts/rvm" >> ~/.bashrc &&\
#	source ~/.bashrc &&\
	bash -l -c "rvm --install ruby-`cat .ruby-version`" &&\
	bash -l -c "rvm requirements" &&\
	bash -l -c "rvm use `cat .ruby-version` --default" &&\
	bash -l -c "source /usr/local/rvm/scripts/rvm" &&\
	bash -l -c "gem install bundler --no-document" &&\
	bash -l -c "source /usr/local/rvm/scripts/rvm" &&\
# Ruby dependencies
	bash -l -c "BUNDLEJOBS=$(expr $(cat /proc/cpuinfo | grep vendor_id | wc -l) - 1)" &&\
	bash -l -c "bundle config --global jobs $BUNDLEJOBS" &&\
	bash -l -c "bundle install" &&\
# Symlink tools to $PATH
	ln -s /opt/msf/msf* /usr/local/bin &&\
	for i in `ls /opt/msf/tools/*/*`; do ln -s $i /usr/local/bin/; done &&\
## Install ruby gem for Oracle
	cd /opt/oracle &&\
	wget https://github.com/kubo/ruby-oci8/archive/ruby-oci8-2.2.7.zip &&\
	unzip ruby-oci8-2.2.7.zip &&\
	rm ruby-oci8-2.2.7.zip &&\
	cd /opt/oracle/ruby-oci8-ruby-oci8-2.2.7 &&\
	bash -l -c "source /usr/local/rvm/scripts/rvm && make && make install" &&\
## Clean up
	apt-get -y --purge remove \
	git \
	#build-essential \
	libreadline-dev \
	libssl-dev \
	libpq-dev \
	libsqlite3-dev \
	libpcap-dev \
	zlib1g-dev \
	libxml2-dev \
	libxslt1-dev \
	libyaml-dev \
	zlib1g-dev \
	libffi-dev \
	libgdbm-dev \
	libncurses5-dev \
	libgmp-dev \
	ntpdate \
	gnupg2 \
	zip \
	unzip \
	libgmp-dev &&\
	apt --purge -y autoremove &&\
	apt clean &&\
	rm -rf /var/lib/apt/lists/*
#################
COPY ./database.yml /opt/msf/config
WORKDIR /opt/msf
# Copying entrypoint file

COPY start.sh /
RUN chmod +x /start.sh

# Set volumes for data

VOLUME /root/.msf4
VOLUME /tmp/data

# For backconnect shellcodes (or payloads as if you want to use fancy names)
EXPOSE 4444/tcp
EXPOSE 4444/udp

# Opening some typical ports
EXPOSE 80/tcp
EXPOSE 80/udp
EXPOSE 8080/tcp
EXPOSE 8080/udp
EXPOSE 443/tcp
EXPOSE 443/udp
EXPOSE 445/tcp
EXPOSE 445/udp
EXPOSE 8081/tcp
EXPOSE 8081/udp

ENTRYPOINT ["/start.sh"]